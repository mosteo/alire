name: CI self+toolchain
# Build Alire with `alr build` and using a toolchain installed from Alire
# The `alr` being tested is the one which is being submitted in the PR

on:
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '**.rst'
      - '**.txt'

jobs:

  build:
    name: ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - macos-10.15
          - ubuntu-latest
          - windows-latest

    steps:
    - name: Check out
      uses: actions/checkout@v3
      with:
        submodules: true

    # Use a stock alr to make the latest toolchain available

    - uses: alire-project/setup-alire@v2
      with:
        toolchain: --disable-assistant

    - name: Install latest toolchain
      shell: bash
      run: |
        alr install gprbuild gnat_native --prefix=tools

    - name: Add toolchain to path
      shell: bash
      run: |
        echo "$PWD/tools/bin" >> $GITHUB_PATH

    - name: Build alr with default toolchain
      run: gprbuild -P alr_env.gpr

    # We can start using the alr we just built

    - name: Update dependencies 
      run: ./bin/alr -n update

    - name: Show dependencies/pins
      run: ./bin/alr -n -q with --solve || ./bin/alr -n -v -d with --solve

    - name: Show build environment
      run: ./bin/alr -n printenv

    - name: SELF-BUILD
      run: ./bin/alr -n build

    - name: Show built version
      run: ./bin/alr -n version

    # Run the testsuite with the just build alr. The testsuite picks the proper
    # alr in the ./bin/alr location.

    - name: Install Python 3.x (required for the testsuite)
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install e3 testsuite
      run: pip install --upgrade e3-testsuite

    - name: Run testsuite
      run: cd testsuite; ./run.py -E
      shell: bash